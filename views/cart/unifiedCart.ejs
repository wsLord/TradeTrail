<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Your Cart</title>
  <link rel="stylesheet" href="/css/main.css">
  <link rel="stylesheet" href="/css/cart.css">
  <link rel="stylesheet" href="/css/forms.css">
  <link rel="stylesheet" href="/css/chatbot.css">
  <link rel="stylesheet" href="/css/rentalStyles.css">
  <link rel="icon" type="image/png" href="/assets/logo2.png">
  
  <style>
    .cart-section {
      margin: 2rem 0;
      border: 1px solid #ddd;
      border-radius: 8px;
      padding: 1rem;
    }
    .section-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      cursor: pointer;
      padding: 1rem;
      background-color: #f5f5f5;
      border-radius: 6px;
    }
    .section-content {
      display: none;
      margin-top: 1rem;
    }
    .section-content.active {
      display: block;
    }
    .toggle-btn {
      font-size: 1.5rem;
      /* background: none; */
      background-color: #838383;
      border: none;
      cursor: pointer;
      padding: 0 1rem;
    }
    .rental-details {
      background: #f8f9fa;
      padding: 15px;
      margin: 10px 0;
      border-radius: 5px;
    }
    .price-breakdown {
      margin-top: 10px;
      padding-left: 20px;
      border-left: 3px solid #007bff;
    }
    .section-checkout {
      margin-top: 1.5rem;
      padding: 1rem;
      background-color: #f8f9fa;
      border-radius: 8px;
      text-align: right;
    }
    .checkout-section-btn {
      background-color: #2f9146;
      color: white;
      padding: 10px 20px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 1rem;
    }
    .checkout-section-btn:hover {
      background-color: #156225;
    }
  </style>
</head>

<body>
  <div id="navbar">
    <%- include('../common/navigation.ejs') %>
    <%- include('../common/chatbot.ejs') %>
  </div>
  <main class="cart-container">
    <div class="cart-header">
      <h1>Your Cart</h1>
    </div>

    <% const sections = {
      Rental: cart.items.filter(item => item.productType === 'Rental'),
      Subscription: cart.items.filter(item => item.productType === 'Subscription'),
      SecondHand: cart.items.filter(item => item.productType === 'SecondHand')
    }; %>

    <% Object.entries(sections).forEach(([sectionName, items]) => { 
      let sectionTotal = 0;
      let sectionDeposit = 0;
    %>
      <div class="cart-section">
        <div class="section-header" onclick="toggleSection('<%= sectionName %>')">
          <h2><%= sectionName %> (<%= items.length %>)</h2>
          <button class="toggle-btn" data-section="<%= sectionName %>">+</button>
        </div>
        <div class="section-content" id="<%= sectionName %>-content">
          <% if (items.length === 0) { %>
            <p>No <%= sectionName %> items in cart</p>
          <% } else { %>
            <table class="cart-items">
              <thead>
                <tr>
                  <th>Product</th>
                  <th>Title</th>
                  <% if (sectionName === 'Rental') { %>
                    <th>Rental Period</th>
                    <th>Rate</th>
                  <% } else if (sectionName === 'Subscription') { %>
                    <th>Platform</th>
                  <% } %>
                  <th>Unit Price</th>
                  <th>Quantity</th>
                  <th>Total</th>
                  <th>Remove</th>
                </tr>
              </thead>
              <tbody>
                <% items.forEach(item => { 
                  let totalPrice = 0;
                  let itemDeposit = 0;
                  
                  if (sectionName === 'Rental') {
                    totalPrice = item.calculatedPrice * item.quantity;
                    itemDeposit = item.securityDeposit;
                    sectionDeposit += itemDeposit;
                  } else {
                    totalPrice = item.product.price * item.quantity;
                  }
                  
                  sectionTotal += totalPrice;
                %>
                  <tr class="cart-item">
                    <td>
                      <% if (item.productType === 'Rental' || item.productType === 'SecondHand') { %>
                        <img src="<%= item.product.imageUrls[0] %>" alt="<%= item.product.title %>" style="max-width: 100px;">
                      <% } else if (item.productType === 'Subscription') { %>
                        <img src="<%= item.product.imageUrl %>" alt="<%= item.product.platform_name %>" style="max-width: 100px;">
                      <% } %>
                    </td>
                    <td><%= item.product.title || item.product.platform_name %></td>
                    
                    <% if (sectionName === 'Rental') { %>
                      <td>
                        <% if (item.rentalStart && item.rentalEnd) { %>
                          <div class="rental-details">
                            <%= item.rentalStart.toISOString().split('T')[0] %> to 
                            <%= item.rentalEnd.toISOString().split('T')[0] %>
                            <% 
                              const diffTime = item.rentalEnd - item.rentalStart;
                              const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
                            %>
                            (<%= diffDays %> days)
                          </div>
                        <% } else { %>
                          <div class="text-warning">Dates not selected</div>
                        <% } %>
                      </td>
                      <td>
                        <div class="price-breakdown">
                          ₹<%= item.product.price %>/<%= item.product.rate %>
                          <% if (item.product.rate === 'day' && (item.diffDays || 0) > 1) { %>
                              × <%= item.diffDays || 1 %> days
                          <% } %>
                        </div>
                      </td>
                    <% } else if (sectionName === 'Subscription') { %>
                      <td><%= item.product.platform_name %></td>
                    <% } %>

                    <td>
                      ₹<%= sectionName === 'Rental' ? (item.calculatedPrice || 0).toFixed(2) : 
                        (item.product?.price || 0).toFixed(2) %>
                      <% if (sectionName === 'Rental') { %>
                        <div class="security-deposit">
                          + ₹<%= item.securityDeposit %> deposit
                        </div>
                      <% } %>
                    </td>

                    <td>
                      <% if (sectionName === 'Rental') { %>
                        <span><%= item.quantity %></span>
                      <% } else { %>
                        <form action="/cart/update/<%= item._id %>" method="POST">
                          <input type="number" name="quantity" value="<%= item.quantity %>" 
                                 min="1" max="<%= item.product.quantity %>" class="quantity-input">
                          <button type="submit">Update</button>
                        </form>
                      <% } %>
                    </td>

                    <td>
                      ₹<%= (totalPrice + (sectionName === 'Rental' ? itemDeposit : 0)).toFixed(2) %>
                      <% if (sectionName === 'Rental') { %>
                        <div class="price-breakdown">
                          (₹<%= totalPrice.toFixed(2) %> + 
                          ₹<%= (itemDeposit || 0).toFixed(2) %> deposit)
                        </div>
                      <% } %>
                    </td>

                    <td>
                      <form action="/cart/delete/<%= item._id %>" method="POST">
                        <button type="submit" class="delete-button" 
                                style="background-color: black; color: white;">Delete</button>
                      </form>
                    </td>
                    
                  </tr>
                <% }); %>
              </tbody>
            </table>

            <!-- Section Checkout Button -->
            <div class="section-checkout">
              <button class="checkout-section-btn"
  data-section="<%= sectionName %>"
  data-total="<%= (sectionTotal + (sectionName === 'Rental' ? sectionDeposit : 0)).toFixed(2) %>"
  onclick="makePayment(event)">
  Checkout <%= sectionName %> - ₹<%= (sectionTotal + (sectionName === 'Rental' ? sectionDeposit : 0)).toFixed(2) %>
</button>

            </div>
          <% } %>
        </div>
      </div>
    <% }); %>
  </main>

  <script>
    function toggleSection(sectionName) {
      const content = document.getElementById(`${sectionName}-content`);
      const btn = document.querySelector(`[data-section="${sectionName}"]`);
      content.classList.toggle('active');
      btn.textContent = content.classList.contains('active') ? '-' : '+';
    }

    // Expand first non-empty section
    document.querySelectorAll('.cart-section').forEach(section => {
      if (section.querySelector('.cart-item')) {
        const sectionName = section.querySelector('h2').textContent.split(' ')[0];
        toggleSection(sectionName);
      }
    });

    // Razorpay Checkout Handlers
  //   document.querySelectorAll('.checkout-section-btn').forEach(button => {
  //     button.addEventListener('click', async (e) => {
  //       const section = button.dataset.section;
  //       const amount = button.dataset.total;
        
  //       try {
  //         const response = await fetch(`/payment/${section.toLowerCase()}/checkout`, {
  //           method: 'POST',
  //           headers: {
  //             'Content-Type': 'application/json',
  //             'Authorization': `Bearer ${localStorage.getItem('token')}`
  //           },
  //           body: JSON.stringify({ amount })
  //         });

  //         const { success, order } = await response.json();
          
  //         if (success) {
  //           const options = {
  //             key: '<%= process.env.RAZORPAY_KEY_ID %>',
  //             amount: order.amount,
  //             currency: "INR",
  //             name: "TradeTrail",
  //             description: `${section} Payment`,
  //             order_id: order.id,
  //             handler: async function(response) {
  //               const verificationResponse = await fetch(`/payment/${section.toLowerCase()}/verify`, {
  //                 method: 'POST',
  //                 headers: {
  //                   'Content-Type': 'application/json',
  //                   'Authorization': `Bearer ${localStorage.getItem('token')}`
  //                 },
  //                 body: JSON.stringify(response)
  //               });

  //               const { success: verificationSuccess } = await verificationResponse.json();
  //               if (verificationSuccess) {
  //                 window.location.href = `/payment/success/${section.toLowerCase()}`;
  //               }
  //             }
  //           };

  //           const rzp = new Razorpay(options);
  //           rzp.open();
  //         }
  //       } catch (error) {
  //         console.error('Checkout error:', error);
  //       }
  //     });
  //   });
  // </script>
      <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    
      <script>
        function collectProductIds() {
    const productIds = [];
    const productIdInputs = document.querySelectorAll('.product-id');
    
    productIdInputs.forEach(input => {
      productIds.push(input.value);
    });
    return productIds;
    // console.log(productIds); // This will log the array of product IDs
    // You can now use the productIds array as needed
  }

      function makePayment(event) {
  let button = event.target; // Get the button that was clicked
  let section = button.getAttribute("data-section");
  let amount = parseFloat(button.getAttribute("data-total")) ; 
  
  // Call the function to collect IDs
  const productIds = collectProductIds();
  
  console.log("Section:", section);
  console.log("Amount:", amount);
  console.log("Product IDs:", productIds);

  fetch("/api/payment/makePayment", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ amount,section, productIds  }),
  })
    .then((response) => response.json())
    .then((data) => {
      console.log("data", data);
      if (data.success) {
        const options = {
          ...data.options,
          handler: function (response) {
            verifyPayment(response, amount,productIds);
          },
        };
        console.log(options);

        const rzp = new Razorpay(options);
        rzp.open();
      } else {
        alert("Payment initialization failed");
      }
    })
    .catch(() => alert("Failed to create order"));
}

function verifyPayment(response, amount,productIds) {
  console.log("Verifying payment with:", response, "and amount:", amount);

  fetch("/api/payment/verifyPayment", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ ...response, amount,productIds }),
  })
    .then((res) => res.json())
    .then((data) => {
      if (data.success) {
        alert("Payment successful! Redirecting...");
        console.log("Redirecting to:", data.redirectUrl);
        window.location.href = data.redirectUrl;
      } else {
        alert("Payment verification failed");
      }
    })
    .catch((error) => {
      console.error("Error verifying payment:", error);
      alert("Error verifying payment");
    });
}

  
      </script>
</body>
</html>