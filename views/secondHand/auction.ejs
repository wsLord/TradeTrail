<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Auction Page</title>
  <link rel="stylesheet" href="/css/main.css">
  <link rel="stylesheet" href="/css/forms.css">
  <link rel="stylesheet" href="/css/navigation.css">
  <link rel="stylesheet" href="/css/auction.css">
  <link rel="stylesheet" href="/css/chatbot.css">
  <link rel="icon" type="image/png" href="/assets/logo2.png">

  <style>
   
.alert-box {
  position: relative;
  max-width: 400px;
  margin: 20px auto;
  padding: 15px 35px 15px 20px;
  border-radius: 4px;
  text-align: center;
}


.close-btn {
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
  cursor: pointer;
  font-weight: bold;
  font-size: 1.2em;
  color: inherit;
  background: none;
  border: none;
  padding: 0 5px;
}


.alert-error {
  color: #721c24;
  background-color: #f8d7da;
  border: 1px solid #f5c6cb;
  padding: 10px;
  margin: 20px 0;
  border-radius: 4px;
}

.alert-success {
  color: #155724;
  background-color: #d4edda;
  border: 1px solid #c3e6cb;
  padding: 10px;
  margin: 20px 0;
  border-radius: 4px;
}

.alert-info {
  color: #721c24;
  background-color: #f8d7da;
  border: 1px solid #f5c6cb;
  padding: 20px;
  margin: 20px 0;
  border-radius: 4px;
}

.countdown-timer {
    margin: 1rem 0;
    padding: 1rem;
    background: #e8f5e9;
    border-radius: 8px;
    text-align: left;
    border-left: 4px solid #1b5e20;
    width: fit-content;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
  }

  .timer-container {
    display: flex;
    gap: 1rem;
    margin: 0.5rem 0;
    flex-wrap: wrap;
    justify-content: flex-start;
  }

  .time-segment {
  background: #ffffff;
  padding: 0.5rem;
  border-radius: 6px;
  display: flex;
  align-items: center;
  justify-content: center; 
  min-width: 80px;
  border: 1px solid #c8e6c9;
  height: 60px; 
}

.time-numbers {
  display: flex;
  flex-direction: column;
  align-items: center; 
  justify-content: center; 
  text-align: center; 
  width: 100%;
}

.time-numbers span {
  font-size: 1.6rem;  
  font-weight: 700;
  color: #1b5e20;
  line-height: 1.2;   
}


  .time-numbers small {
    font-size: 0.7rem;
    color: #4caf50;
    text-transform: uppercase;
  }

  .timer-message {
    font-size: 0.95rem;
    color: #2e7d32;
    margin: 0.5rem 0 0;
    font-weight: 600;
    padding: 8px 12px;
    background: #c8e6c9;
    border-radius: 4px;
    display: inline-block;
  }

  .time-left-text {
  font-size: 1.4rem;
  color: #1b5e20;
  font-weight: 600;
  margin-left: 0.5rem;
  align-self: center;
  letter-spacing: 0.5px;
  transform: translateY(-2px);
  position: relative;
  left: -5px;
}

.timer-container {
  gap: 0.8rem; 
}
.timer-container {
  display: flex;
  gap: 1rem;
  margin: 0.5rem 0;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-items: center; 
}

.auction-status-box {
  background: #ffffff;
  border: 2px solid #e0e0e0;
  border-radius: 12px;
  padding: 1.5rem;
  width: 100%;
  display: flex;
  align-items: center;
  gap: 1rem;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
}

.status-icon {
  font-size: 2rem;
  background: #f5f5f5;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
}

.status-content h3 {
  color: #2d2d2d;
  margin: 0;
  font-size: 1.3rem;
  font-weight: 600;
}

.status-content p {
  color: #666;
  margin: 0.3rem 0 0;
  font-size: 0.95rem;
}

.bidding-closed-message {
  color: #666;
  font-style: italic;
  text-align: center;
  padding: 1rem;
}


[disabled] {
  opacity: 0.6;
  cursor: not-allowed;
}

.disabled-section {
  opacity: 0.6;
  pointer-events: none;
  position: relative;
}

.disabled-section::after {
  content: "Bidding Closed";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: rgba(255, 255, 255, 0.9);
  padding: 0.5rem 1rem;
  border-radius: 4px;
  color: #666;
  font-weight: 500;
}
.winner-section {
  background-color: #f0fff0;
  border: 2px solid #4CAF50;
  padding: 20px;
  margin-top: 20px;
  border-radius: 8px;
}

.winner-section h2 {
  color: #4CAF50;
}

.winner-section p {
  font-size: 16px;
}

  </style>
</head>
<body>
  <%- include('../common/navigation.ejs') %>
  <%- include('../common/chatbot.ejs') %>
  <main>
    
    <% if (messages.error && messages.error.length > 0) { %>
      <div class="alert-box alert-error">
        <% messages.error.forEach(function(msg) { %>
          <p><%= msg %></p>
        <% }); %>
        <button class="close-btn" onclick="this.parentElement.style.display='none'">&times;</button>
      </div>
    <% } %>
    <% if (messages.success && messages.success.length > 0) { %>
      <div class="alert-box alert-success">
        <% messages.success.forEach(function(msg) { %>
          <p><%= msg %></p>
        <% }); %>
        <button class="close-btn" onclick="this.parentElement.style.display='none'">&times;</button>
      </div>
    <% } %>
    
    <section>
      <h1>Auction</h1>
      <h2>Welcome, <%= user.fullName %>!</h2></br></br>
      <div><b>Product:</b> <%= product.title %></div>
      <p><b>Seller:</b> <%= product.seller ? product.seller.fullName : "Unknown Seller" %></p>
      <p>Start: <span id="start-date"><%= product.startDate %></span></p>
      <p>End: <span id="end-date"><%= product.endDate %></span></p>

      
<% if ( product.winner) { %>
  <section class="winner-section">
    <h2>Auction Completed</h2>
    <p>Congratulations! The winner is <strong><%= product.winner.fullName %></strong>.</p>

  </section>
<% } %>

      
      
      <div class="countdown-timer">
        <div class="timer-container">
          <div class="time-segment">
            <div class="time-numbers">
              <span id="days">0</span>
              <small>Days</small>
            </div>
          </div>
          <div class="time-segment">
            <div class="time-numbers">
              <span id="hours">0</span>
              <small>Hours</small>
            </div>
          </div>
          <div class="time-segment">
            <div class="time-numbers">
              <span id="minutes">0</span>
              <small>Mins</small>
            </div>
          </div>
          <div class="time-segment">
            <div class="time-numbers">
              <span id="seconds">0</span>
              <small>Secs</small>
            </div>
          </div>
          <span class="time-left-text">left!</span>
        </div>
        <p id="timer-message" class="timer-message">🎯 Place your bid now! Don't miss out! 🚀</p>
      </div>

      
      <div class="price-display">
        <p>Actual Price: ₹<span id="actual-price"><%= product.price %></span></p>
        <p>Minimum Bid: ₹<span id="min-bid"><%= product.min_price %></span></p>
        <p>Max bid: ₹<span id="max-bid"><%= maxBid %></span></p>
      </div>
    </section>
    
    <section>
      <h2>Bid Amount</h2>
      <% 
         // Check if the current user already placed a bid on this product.
         const userBid = product.bids.find(bid => String(bid.bidder._id) === String(user._id));
         const minBidValue = monetaryBidsCount === 0 ? product.min_price : maxBid + MIN_BID_INCREMENT;
      %>
      <% if (!userBid) { %>
        
        <form id="bidForm" action="/secondHand/buy/<%= product._id %>/add-bid-product" method="POST">
          <input 
            type="number" 
            id="bidAmount" 
            name="bidAmount" 
            placeholder="Enter bid amount" 
            min="<%= minBidValue %>" 
            required>
            <small>
              Minimum bid: ₹<%= minBidValue %>
              <% if (monetaryBidsCount > 0) { %>
                  (Current max: ₹<%= maxBid %>)
              <% } %>
          </small>
          <button type="button" onclick="makePayment(event)">Bid</button>
        </form>
      <% } else { %>
        
        <div class="alert-info">
          <p>You have already placed a bid of on this auction.</p>
          <p>Please delete your existing bid before placing a new one.</p>
          <form action="/secondHand/delete-bid/<%= userBid._id %>" method="POST">
            
            <button type="button" class="delete-btn" onclick="initiateRazorpayRefund(event, '<%= userBid.bidAmount %>')">Delete Your Bid</button>

          </form>
        </div>
      <% } %>
    </section>
    
    
    <section>
      <h2>Bid with a Product</h2>
      <a href="/secondHand/buy/<%= product._id %>/add-bid-product">
        <button>Add Product Bid</button>
      </a>
    </section>
    
    
    <section>
      <h2>Monetary Bids</h2>
      <table id="monetaryBidsTable">
        <thead>
          <tr>
            <th>Bidder</th>
            <th>Amount</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
          <% const moneyBids = product.bids.filter(bid => bid.bidAmount); %>
          <% if (moneyBids.length > 0) { %>
            <% moneyBids.forEach(function(bid) { %>
              <tr>
                <td><%= bid.bidder.fullName || "Anonymous" %></td>
                <td>₹<%= bid.bidAmount %></td>
                <td>
                  <% if (String(bid.bidder._id) === String(user._id)) { %>


<form id="refundform" action="/secondHand/delete-bid/<%= bid._id %>" method="POST">
  <input type="hidden" name="bidId" value="<%= bid._id %>">
  <input type="hidden" name="paymentId" value="<%= bid.paymentId %>">
  <button type="button" class="delete-btn" onclick="initiateRazorpayRefund(event, '<%= bid.bidAmount %>')">Delete</button>
</form>
                  <% } %>
                </td>
              </tr>
            <% }); %>
          <% } else { %>
            <tr><td colspan="3">No monetary bids yet.</td></tr>
          <% } %>
        </tbody>
      </table>
    </section>
    
    
    <section>
      <h2>Product Bids</h2>
      <table id="productBidsTable">
        <thead>
          <tr>
            <th>Bidder</th>
            <th>Product Name</th>
            <th>Description</th>
            <th>Location</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
          <% const productBids = product.bids.filter(bid => bid.title); %>
          <% if (productBids.length > 0) { %>
            <% productBids.forEach(function(bid) { %>
              <tr>
                <td><%= bid.bidder.fullName || "Anonymous" %></td>
                <td><%= bid.title %></td>
                <td><%= bid.description %></td>
                <td><%= bid.location %></td>
                <td>
                  <% if (String(bid.bidder._id) === String(user._id)) { %>
                    <form action="/secondHand/delete-bid/<%= bid._id %>" method="POST">
                      <button type="submit" class="delete-btn">Delete</button>
                    </form>
                    
                  <% } %>
                </td>
              </tr>
            <% }); %>
          <% } else { %>
            <tr><td colspan="5">No product bids yet.</td></tr>
          <% } %>
        </tbody>
      </table>
    </section>
  </main>
</body>
</html>

<script>
    
    document.addEventListener('DOMContentLoaded', function() {
      const alerts = document.querySelectorAll('.alert-box');
      alerts.forEach(alert => {
        setTimeout(() => {
          alert.style.display = 'none';
        }, 5000);
      });
    });
  
    
    document.querySelectorAll('.close-btn').forEach(btn => {
      btn.addEventListener('click', function() {
        this.parentElement.style.display = 'none';
      });
    });

    document.addEventListener('DOMContentLoaded', function() {
    const endDate = new Date('<%= product.endDate %>');
    const timerMessage = document.getElementById('timer-message');
    
    function updateTimer() {
      const now = new Date().getTime();
      const distance = endDate - now;


if (distance <= 0) {
  clearInterval(timerInterval);
  const timerContainer = document.querySelector('.timer-container');
  const countdownTimer = document.querySelector('.countdown-timer');
  
  
  timerContainer.innerHTML = `
    <div class="auction-status-box">
      <div class="status-icon">🏁</div>
      <div class="status-content">
        <h3>Auction Closed</h3>
        <p>Thank you for participating!</p>
      </div>
    </div>
  `;
  
  
  timerMessage.innerHTML = "⛔ Bidding has concluded";
  timerMessage.style.background = "#f5f5f5";
  timerMessage.style.color = "#666";
  timerMessage.style.border = "1px solid #ddd";
  
  
  const bidForm = document.getElementById('bidForm');
  if (bidForm) {
    bidForm.querySelector('button').disabled = true;
    bidForm.querySelector('input').disabled = true;
    bidForm.querySelector('input').placeholder = "Bidding Closed";
    bidForm.style.opacity = "0.6";
  }
  
  
  const productBidBtn = document.querySelector('[href="/secondHand/buy/<%= product._id %>/add-bid-product"]');
  if (productBidBtn) {
    productBidBtn.style.pointerEvents = "none";
    productBidBtn.style.opacity = "0.4";
  }
  
  
  document.querySelectorAll('.delete-btn').forEach(btn => btn.disabled = true);
  document.querySelectorAll('table tbody tr').forEach(row => {
    if (row.textContent.includes("No bids yet")) {
      row.innerHTML = `<td colspan="5" class="bidding-closed-message">Bidding Closed</td>`;
    }
  });
}

      const days = Math.floor(distance / (1000 * 60 * 60 * 24));
      const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
      const seconds = Math.floor((distance % (1000 * 60)) / 1000);

      document.getElementById('days').textContent = days;
      document.getElementById('hours').textContent = hours.toString().padStart(2, '0');
      document.getElementById('minutes').textContent = minutes.toString().padStart(2, '0');
      document.getElementById('seconds').textContent = seconds.toString().padStart(2, '0');

      
      if (days === 0) {
        if (hours === 0) {
          timerMessage.innerHTML = `⏳ Final ${minutes} minutes! <strong>Bid now!</strong> 💥`;
        } else {
          timerMessage.innerHTML = `🚨 Hurry! Only ${hours} hours left! ⏳`;
        }
      } else if (days === 1) {
        timerMessage.innerHTML = "🔥 Last day to bid! Don't miss out! 🚀";
      } else if (days < 3) {
        timerMessage.innerHTML = "⏳ Time's ticking! Bid soon! 💡";
      } else {
        timerMessage.innerHTML = "🎯 Place your bid now! 🚀 Don't miss this chance!";
      }
    }

    let timerInterval = setInterval(updateTimer, 1000);
    updateTimer();
  });
  </script>
  
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    
  <script>
function makePayment(event) {
  event.preventDefault(); 

  const inputElement = document.getElementById("bidAmount");
  const maxBidElement = document.getElementById("max-bid");
  const minBidElement = document.getElementById("min-bid");

  if (!inputElement || !maxBidElement || !minBidElement) {
    console.error("Required input fields not found!");
    return;
  }

  const amount = parseFloat(inputElement.value.trim());
  const maxBidAmount = parseFloat(maxBidElement.innerText.trim());

  const productMinPrice = parseFloat(minBidElement.innerText.trim());

  
  let minBidAmount;
  if (maxBidAmount === productMinPrice) {
    minBidAmount = productMinPrice;
  } else {
    minBidAmount = maxBidAmount + 100;
  }


  if (isNaN(amount) || amount <= 0) {
    alert("Please enter a valid bid amount.");
    return;
  }

  if (amount < minBidAmount) {
    alert(`Your bid must be at least ₹${minBidAmount}.`);
    return;
  }

  const productId = "<%= product._id %>"; 

  fetch("/secondHand/api/payment/makePayment", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ amount: amount * 100, productId }), 
  })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        const options = {
          ...data.options,
          handler: function (response) {
            verifyPayment(response, amount, productId); 
          },
        };

        const rzp = new Razorpay(options);
        rzp.open();
      } else {
        alert("Payment initialization failed");
      }
    })
    .catch(() => alert("Failed to create order"));
}

function verifyPayment(response, amount, productId) {
  fetch("/secondHand/api/payment/verifyPayment", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ ...response, amount, productId }), 
  })
  .then(res => res.json())
  .then(data => {
    if (data.success) {
      alert(`Payment successful with Payment ID: ${response.razorpay_payment_id}! Your bid has been placed.`);
      
      sessionStorage.setItem("paymentId", response.razorpay_payment_id);

      
      const paymentInput = document.createElement("input");
      paymentInput.type = "hidden";
      paymentInput.name = "paymentId";
      paymentInput.value = response.razorpay_payment_id;
      document.getElementById("bidForm").appendChild(paymentInput);

      
      document.getElementById('bidForm').submit();
      
    } else {
      alert("Payment verification failed.");
    }
  })
  .catch(error => {
    console.error("Error verifying payment:", error);
    alert("Error verifying payment.");
  });
}
  
  
  function initiateRazorpayRefund(event, amount) {
    event.preventDefault();

    
  let paymentId = sessionStorage.getItem("paymentId");
    
    if (!paymentId) {
      console.error("Payment ID is missing");
      alert("Cannot process refund: Payment information is missing");
      return;
    }
    
    if (confirm("Are you sure you want to delete this bid? 90% of your payment will be refunded, while 10% will be deducted as a platform fee.")) {
      
      const button = event.target;
      const originalText = button.textContent;
      button.disabled = true;
      button.textContent = "Processing...";
      
      
      fetch("/secondHand/api/payment/razorpayRefund", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          paymentId: paymentId,
          amount: Math.floor(amount * 100 * 0.9), 
          notes: {
            reason: "Bid deleted by user"
          }
        })
      })
      .then(response => {
        if (!response.ok) {
          throw new Error(`Server responded with status ${response.status}`);
        }
        return response.json();
      })
      .then(data => {
        if (data.success) {
          alert(`Refund initiated successfully with Refund ID: ${data.refundId}! Your bid will be deleted.`);
          
          document.getElementById('refundform').submit();
        } else {
          alert(`Refund failed: ${data.message || 'Unknown error'}`);
          button.disabled = false;
          button.textContent = originalText;
        }
      })
      .catch(error => {
        console.error("Error processing refund:", error);
        alert("Error processing refund. Please try again or contact support.");
        button.disabled = false;
        button.textContent = originalText;
      });
    }
}

  </script>